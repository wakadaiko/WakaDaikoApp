@{
    string c = "";
    const string colorDefault1 = "font-black tracking-wider text-amber-300 hover:text-amber-200";
    const string bgBtnSolid = "bg-amber-300 hover:bg-amber-200";
    const string class1 = $"flex justify-center items-center {colorDefault1} p-4";
    const string buttonSolid = $"w-full lg:w-max flex justify-center items-center {bgBtnSolid} whitespace-nowrap tracking-wider font-black text-black p-4";

    switch (Model.Type)
    {
        @* Unique *@
        case "link-brand":
            c = "h-full flex justify-center items-center gap-2 font-['Bebas_Neue'] font-black tracking-wider hover:bg-[rgb(12.5%,12.5%,12.5%)] text-2xl text-white px-4";
            break;
        case "link-nav-dropdown-item":
            c = "flex items-center lg:hover:bg-[rgb(87.5%,87.5%,87.5%)] font-medium lg:text-nowrap text-white lg:text-black lg:border-[1px] lg:border-[rgb(75%,75%,75%)] lg:hover:border-[rgb(50%,50%,50%)] p-4";
            break;
        case "link-navbar":
            c = "w-full h-full flex items-center font-medium text-white lg:text-inherit p-4 lg:px-4 lg:py-0";
            break;
        case "link-nav-workshops":
            c = $"gap-2 rounded-md lg:rounded-none {buttonSolid} m-4 mt-2 lg:m-0";
            break;
        case "link-dialog":
            c = "flex justify-center items-center font-black tracking-wider text-black p-4 -m-3";
            break;
        case "btn-logout":
            c = $"lg:min-w-full rounded-md lg:rounded-none {buttonSolid} m-4 mb-2 lg:m-0";
            break;
        case "btn-secondary":
            c = "flex justify-center items-center rounded-md tracking-wider font-black hover:bg-white text-white hover:text-black p-4";
            break;
        case "btn-dialog":
            c = "rounded-md bg-transparent hover:bg-black font-black tracking-wider text-black hover:text-white border-[1px] border-black hover:border-transparent p-4";
            break;
        @* case "fancy-link":
            c = "group flex items-center text-[rgb(75%,75%,75%)] hover:text-white p-4 -m-3";
            break; *@
        case "link-events-filters":
            c = $"w-full flex justify-center {colorDefault1} p-4";
            break;
        case "link-events-breadcrumb":
            c = $"w-full flex justify-center {colorDefault1} p-2";
            break;
        case "link-events-pin-btn":
            c = $"z-20 {(User.Identity != null && User.Identity.IsAuthenticated && User.IsInRole("Site_Admin") ? "" : "hidden ")}absolute top-0 right-0 rounded-md {(Model.Body == "True" ? "bg-sky-400 hover:bg-sky-300" : "bg-sky-600 hover:bg-sky-400")} text-black m-3 p-2";
            break;
        case "btn-events":
            c = $"w-full flex justify-center items-center rounded-md {bgBtnSolid} whitespace-nowrap tracking-wider font-black text-black p-4";
            break;
        case "link-events-pagination-left":
        case "link-events-pagination-right":
            c = "w-full lg:w-max flex justify-center items-center whitespace-nowrap tracking-wider font-black text-[rgb(75%,75%,75%)] hover:text-white p-4";
            break;
        case "link-events-pagination-middle":
            c = $"w-full h-full flex justify-center items-center font-black{(Model.Body == ViewBag.PaginationId ? $" rounded-md {bgBtnSolid} text-black" : " text-[rgb(75%,75%,75%)] hover:text-white")}";
            break;
        case "btn-scroll-to-top":
            c = $"z-10 duration-200 ease-in-out scale-0 fixed bottom-4 right-4 rounded-md {bgBtnSolid} text-black shadow-lg p-4";
            break;
        @* Shared *@
        case "link-account":
        case "link-privacy":
        case "link-footer":
            c = $"{colorDefault1} p-4";
            break;
        case "btn-primary":
        case "btn-account":
            c = $"rounded-md {buttonSolid}";
            break;
    }
}

@switch (Model.Type) {
    @* Type - Link - Specific *@
    case "link-brand":
        <a class="@(c ?? c)" href=@Model.URL>
            <div class="relative grow invert brightness-200">
                <img class="grow" src="~/images/logo_waka_daiko.png" alt="Waka Daiko logo" width="32" height="32" />
            </div>
            <div class="shrink text-nowrap text-4xl mt-1">
                @Html.Raw(Model.Body)
            </div>
        </a>
        break;
    case "link-nav-dropdown-item":
        <a class="@(c ?? c)" href=@Model.URL target="@(Model.ExternalSite == true ? "_blank" : "_self")">
            @Html.Raw(Model.Body)
        </a>
        break;
    case "link-nav-workshops":
        <a class="@(c ?? c)" href=@Model.URL>
            <img src="~/images/logo_japenese_taiko.png" alt="Japenese Taiko logo" width="28" height="28" />
            @Html.Raw(Model.Body)
        </a>
        break;
    case "link-events-pagination-left":
        <a class="@(c ?? c)" href=@Model.URL>
            <svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 320 512" width="16" height="16" xmlns="http://www.w3.org/2000/svg">
                <path d="M9.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l192 192c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L77.3 256 246.6 86.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-192 192z"></path>
            </svg>
        </a>
        break;
    case "link-events-pagination-middle":
        <a class="@(c ?? c)" href=@Model.URL>
            @Html.Raw(Model.Body)
        </a>
        break;
    case "link-events-pagination-right":
        <a class="@(c ?? c)" href=@Model.URL>
            <svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 320 512" width="16" height="16" xmlns="http://www.w3.org/2000/svg">
                <path d="M310.6 233.4c12.5 12.5 12.5 32.8 0 45.3l-192 192c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3L242.7 256 73.4 86.6c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0l192 192z"></path>
            </svg>
        </a>
        break;
    case "link-events-pin-btn":
        <a class="@(c ?? c)" href=@Model.URL>
            <svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 256 256" width="20" height="20" xmlns="http://www.w3.org/2000/svg">
                <path d="M235.33,104l-53.47,53.65c4.56,12.67,6.45,33.89-13.19,60A15.93,15.93,0,0,1,157,224c-.38,0-.75,0-1.13,0a16,16,0,0,1-11.32-4.69L96.29,171,53.66,213.66a8,8,0,0,1-11.32-11.32L85,159.71l-48.3-48.3A16,16,0,0,1,38,87.63c25.42-20.51,49.75-16.48,60.4-13.14L152,20.7a16,16,0,0,1,22.63,0l60.69,60.68A16,16,0,0,1,235.33,104Z"></path>
            </svg>
        </a>
        break;
    @* case "fancy-link":
        <a class="@(c ?? c)" href=@Model.URL>
            <span class="underline decoration-[rgb(75%,75%,75%)] group-hover:decoration-white">
            <span class="group-hover:decoration-white">
                @Html.Raw(Model.Body)
            </span>
            <span class="transition-transform group-hover:translate-x-1 ms-2">-&gt;</span>
            <span class="transition-transform group-hover:translate-x-1 flex justify-center text-4xl ms-2 -mt-[1px]">â†’</span>
        </a>
        break; *@
    case "link-navbar":
    case "link-dialog":
    case "link-account":
    case "link-events-filters":
    case "link-events-breadcrumb":
    case "link-privacy":
    case "link-footer":
    case "btn-primary":
    case "btn-secondary":
        <a class="@(c ?? c)" href=@Model.URL target="@(Model.ExternalSite == true ? "_blank" : "_self")">
            @Html.Raw(Model.Body)
        </a>
        break;
    @* Type - Buttons *@
    case "btn-dialog":
        <button class="@(c ?? c)" onclick="removeDisclaimer();">
            @Html.Raw(Model.Body)
        </button>
        break;
    case "btn-scroll-to-top":
        <button id="buttonScrollToTop" class="@(c ?? c)" onclick="scrollToTop();" type="button">
            <svg stroke="currentColor" fill="currentColor" stroke-width="2" viewBox="0 0 16 16" height="16" width="16"
                xmlns="http://www.w3.org/2000/svg">
                <path fill-rule="evenodd"
                    d="M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z">
                </path>
            </svg>
        </button>
        break;
    case "btn-logout":
    case "btn-account":
    case "btn-events":
        <button class="@(c ?? c)">
            @Html.Raw(Model.Body)
        </button>
        break;
}
